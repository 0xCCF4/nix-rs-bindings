searchState.loadedDescShard("nix_exprc_sys", 0, "No value.\nNo value.\n@defgroup primops Adding primops @{ / /** @brief Function …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n@brief Allocate a PrimOp\n@brief Allocate a Nix value\n@brief Free a bindings builder\n@brief Insert bindings into a builder @param[out] context …\n@brief Copy from another value @param[out] context …\n@brief Get an attribute by index in the sorted bindings\n@brief Get an attr by name\n@brief Get an attribute name by index in the sorted …\n@brief Get the element count of an attrset @param[out] …\n@brief Get boolean value @param[out] context Optional, …\n@brief Get external reference @param[out] context …\n@brief Get float value in 64 bits @param[out] context …\n@brief Get int value @param[out] context Optional, stores …\n@brief Get the ix’th element of a list\n@brief Get the length of a list @param[out] context …\n@brief Get path as string @param[out] context Optional, …\n@brief Get the raw string\n@addtogroup value_manip Manipulating values @brief …\n@brief Get type name of value as defined in the evaluator …\n@brief Check if an attribute name exists on a value @param[…\n@brief Set the value to a thunk that will perform a …\n@}*/ /** @name Initializers\n@brief Set an external value @param[out] context Optional, …\n@brief Set a float @param[out] context Optional, stores …\n@brief Set an int @param[out] context Optional, stores …\n@brief Set null @param[out] context Optional, stores error …\n@brief Set a path @param[out] context Optional, stores …\n@brief Set primop @param[out] context Optional, stores …\n@brief Set a string @param[out] context Optional, stores …\n@brief Free a list builder\n@brief Insert bindings into a builder @param[out] context …\n@brief Create an attribute set from a bindings builder …\n@brief Create a bindings builder @param[out] context …\n@brief Create a list from a list builder @param[out] …\n@brief Create a list builder @param[out] context Optional, …\n@brief Free a realised string @param[in] realised_string\n@brief Length of the string @param[in] realised_string …\n@brief Start of the string @param[in] realised_string …\n@brief Get a store path. The store paths are stored in an …\n@brief Number of realised store paths @param[in] …\n@brief add a primop to the <code>builtins</code> attribute set\n@brief Realise a string context.\n@brief Decrement the garbage collector reference counter …\n@brief Increment the garbage collector reference counter …")